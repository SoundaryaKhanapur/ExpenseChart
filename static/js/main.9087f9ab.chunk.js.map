{"version":3,"sources":["components/Expense/ExpenseDate.jsx","components/UI/Card.jsx","components/Expense/ExpenseItem.jsx","components/Expense/ExpensesList.jsx","components/Expense/ExpenseFilter.jsx","components/Chart/ChartBar.jsx","components/Chart/Chart.jsx","components/Expense/ExpensesChart.jsx","components/Expense/Expenses.jsx","components/NewExpense/ExpenseForm.jsx","components/NewExpense/NewExpense.jsx","App.js","reportWebVitals.js","index.js"],"names":["ExpenseDate","date","month","toLocaleString","day","year","getFullYear","className","Card","props","classes","children","ExpenseItem","title","amount","useState","changetitle","ExpensesList","expenses","length","map","id","ExpenseFilter","value","selected","onChange","event","onChangeFilter","target","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointsValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expense","getMonth","Expenses","filteredYear","setFilteredYear","filteredExpenses","filter","toString","selectedYear","ExpenseForm","enteredTitle","enteredAmount","enteredDate","userInput","setUserInput","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","prevState","min","step","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","random","onAddExpense","console","log","initialExpenses","App","setExpenses","prevExpenses","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9087f9ab.chunk.js","sourcesContent":["import './ExpenseDate.css';\r\n\r\nconst ExpenseDate = ({date}) => {\r\n    const month = date.toLocaleString('en-US', { month: 'long' });\r\n    const day = date.toLocaleString('en-US', { day: '2-digit' });\r\n    const year = date.getFullYear();\r\n\r\n    return (\r\n        <div className=\"expense-date\">\r\n            <div className=\"expense-date__month\">{month}</div>\r\n            <div className=\"expense-date__year\">{year}</div>\r\n            <div className=\"expense-date__day\">{day}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ExpenseDate;","import \"./Card.css\";\r\n\r\nconst Card = (props) => {\r\n    // card space is a must\r\n    const classes = 'card ' + props.className;\r\n    return (\r\n        <div className={classes}>\r\n           {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React, {useState} from 'react';\r\nimport \"./ExpenseItem.css\";\r\nimport ExpenseDate from './ExpenseDate';\r\nimport Card from '../UI/Card';\r\n\r\nconst ExpenseItem = ({  title,\r\n    amount,\r\n    date}) => {\r\n\r\n       const [changetitle, setTitle] = useState(title);\r\n\r\n        const clickHandler = () => {\r\nsetTitle('Updated')\r\n            console.log('Clicked!!!')\r\n        }\r\n\r\n    return (\r\n        <li>\r\n        <Card className=\"expense-item\">\r\n            {/* below is props children */}\r\n            <ExpenseDate date={date} />\r\n            <div className=\"expense-item__description\">\r\n                <h2>{changetitle}</h2>\r\n                <div className=\"expense-item__price\">{amount}</div>\r\n            </div>\r\n            {/* <button onClick={clickHandler}>Change Title</button> */}\r\n        </Card>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default ExpenseItem;","import './ExpensesList.css'\r\nimport ExpenseItem from './ExpenseItem';\r\n\r\nconst ExpensesList = props => {\r\n\r\n\r\n    if(props.expenses.length === 0 ){\r\n        return <h2 className=\"expenses-list__fallback\">Found no expenses</h2> \r\n    }\r\n\r\n    return <ul className=\"expenses-list\">\r\n\r\n        {props.expenses.map(({\r\n            id,\r\n          title,\r\n          amount,\r\n          date\r\n        }) => {\r\n          \r\n          return <ExpenseItem \r\n          key={id}\r\n          title={title} \r\n          amount={amount} \r\n          date={date} \r\n          />\r\n        })}\r\n\r\n    </ul>\r\n}\r\n\r\nexport default ExpensesList;","import React from 'react';\r\nimport './ExpenseFilter.css';\r\n\r\n\r\nconst ExpenseFilter = (props) => {\r\n\r\n    const filterChangeHandler = (event) => {\r\n        props.onChangeFilter(event.target.value)\r\n\r\n    }\r\n   \r\n    return(\r\n        <div className=\"expenses-filter\">\r\n            <div className=\"expenses-filter__control\">\r\n                <label>Filter by year</label>\r\n                <select \r\n                value={props.selected} \r\n                onChange={filterChangeHandler}\r\n                >\r\n                    <option value='2023'>2023</option>\r\n                    <option value='2022'>2022</option>\r\n                    <option value='2021'>2021</option>\r\n                    <option value='2020'>2020</option>\r\n                </select>\r\n            </div>\r\n          \r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ExpenseFilter;","import './ChartBar.css';\r\n\r\nconst ChartBar = props => {\r\n\r\n    let barFillHeight = '0%';\r\n\r\n    if(props.maxValue > 0) {\r\n        barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%';\r\n    }\r\n\r\n    return <div className=\"chart-bar\">\r\n        <div className=\"chart-bar__inner\">\r\n            <div className=\"chart-bar__fill\" style={{height: barFillHeight}}>\r\n\r\n            </div>\r\n         \r\n        </div>\r\n        <div className=\"chart-bar__label\">\r\n                {props.label}\r\n            </div>\r\n    </div>\r\n    };\r\n    \r\n    export default ChartBar;","import './Chart.css';\r\nimport ChartBar from './ChartBar'\r\n\r\nconst Chart = props => {\r\n\r\n    const dataPointsValues = props.dataPoints.map(dataPoint => dataPoint.value);\r\n    const totalMaximum = Math.max(...dataPointsValues);\r\n\r\nreturn <div className=\"chart\">\r\n    {props.dataPoints.map(\r\n        dataPoint => <ChartBar \r\n        key={dataPoint.label}\r\n        value={dataPoint.value} \r\n        maxValue={totalMaximum}\r\n        label={dataPoint.label}\r\n        />\r\n    )}\r\n</div>\r\n};\r\n\r\nexport default Chart;","import Chart from \"../Chart/Chart\"\r\n\r\nconst ExpensesChart = props => {\r\n\r\n    const chartDataPoints = [\r\n        {label: 'Jan', value: 0},\r\n        {label: 'Feb', value: 0},\r\n        {label: 'Mar', value: 0},\r\n        {label: 'Apr', value: 0},\r\n        {label: 'May', value: 0},\r\n        {label: 'Jun', value: 0},\r\n        {label: 'Jul', value: 0},\r\n        {label: 'Aug', value: 0},\r\n        {label: 'Sep', value: 0},\r\n        {label: 'Oct', value: 0},\r\n        {label: 'Nov', value: 0},\r\n        {label: 'Dec', value: 0},\r\n    ];\r\n\r\n    for (const expense of props.expenses) {\r\n        const expenseMonth = expense.date.getMonth(); //starting at 0 => Jan\r\n        chartDataPoints[expenseMonth].value += expense.amount;\r\n    }\r\n\r\n    return <Chart dataPoints={chartDataPoints}/>\r\n}\r\n\r\nexport default ExpensesChart;","import React, {useState} from 'react';\r\nimport './Expenses.css'\r\nimport ExpensesList from './ExpensesList';\r\nimport Card from '../UI/Card';\r\nimport ExpenseFilter from './ExpenseFilter';\r\nimport ExpensesChart from './ExpensesChart';\r\n\r\nconst Expenses = ({expenses}) => {\r\n\r\n   \r\n    const [filteredYear, setFilteredYear] = useState('2020')\r\n\r\n    const filterChangeHandler = selectedYear => {\r\n        setFilteredYear(selectedYear)\r\n        \r\n    }\r\n\r\n    const filteredExpenses = expenses.filter(expense => {\r\n        return expense.date.getFullYear().toString() === filteredYear\r\n    })\r\n\r\n   \r\n\r\n    return (\r\n        <Card className=\"expenses\">\r\n        <ExpenseFilter \r\n        onChangeFilter={filterChangeHandler}\r\n        selected={filteredYear}\r\n        />\r\n\r\n        <ExpensesChart expenses={filteredExpenses}/>\r\n\r\n      <ExpensesList expenses={filteredExpenses}/>\r\n\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Expenses;","import React, {useState} from 'react';\r\nimport './ExpenseForm.css';\r\n\r\nconst ExpenseForm = (props) => {\r\n\r\n    // const [enteredTitle, setEnteredTitle] = useState('');\r\n    // const [enteredAmount, setEnteredAmount] = useState('');\r\n    // const [enteredDate, setEnteredDate] = useState('');\r\n\r\n    const [userInput, setUserInput] = useState({\r\n        enteredTitle: '',\r\n        enteredAmount: '',\r\n        enteredDate: ''  \r\n    });\r\n\r\n    const titleChangeHandler = (event) => {\r\n        // setEnteredTitle(event.target.value)\r\n        // setUserInput({\r\n        //     ...userInput,   //spread operator so that amt and date are not lost\r\n        //     enteredTitle: event.target.value,\r\n        // })\r\n        \r\n        // to not lose previous state\r\n\r\n        setUserInput((prevState) => {\r\n            return {\r\n                ...prevState,\r\n                enteredTitle: event.target.value,\r\n            }\r\n        });\r\n    }\r\n\r\n    const amountChangeHandler = (event) => {\r\n        // setEnteredAmount(event.target.value)\r\n        // setUserInput({\r\n        //     ...userInput,   \r\n        //     enteredAmount: event.target.value,\r\n        // })\r\n\r\n        setUserInput((prevState) => {\r\n            return {\r\n                ...prevState,\r\n                enteredAmount: event.target.value,\r\n            }\r\n        });\r\n    }\r\n\r\n    const dateChangeHandler = event => {\r\n        // setEnteredDate(event.target.value)\r\n        // setUserInput({\r\n        //     ...userInput,   \r\n        //     enteredDate: event.target.value,\r\n        // })\r\n\r\n        setUserInput((prevState) => {\r\n            return {\r\n                ...prevState,\r\n                enteredDate: event.target.value,\r\n            }\r\n        });\r\n    }\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        const expenseData = {\r\n            title: userInput.enteredTitle,\r\n            amount: userInput.enteredAmount,\r\n            date: new Date(userInput.enteredDate)\r\n        };\r\n\r\n      //  console.log(expenseData)\r\n\r\n        props.onSaveExpenseData(expenseData)\r\n\r\n        setUserInput({\r\n            enteredTitle: '',\r\n            enteredAmount: '',\r\n            enteredDate: ''  \r\n        }) //2 way binding\r\n    }\r\n\r\n    return(\r\n      <form onSubmit={submitHandler}>\r\n          <div className=\"new-expense__controls\">\r\n              <div className=\"new-expense__control\">\r\n                  <label>Title</label>\r\n                  <input type='text'\r\n                  value={userInput.enteredTitle}\r\n                  onChange={titleChangeHandler}/>\r\n              </div>\r\n              <div className=\"new-expense__control\">\r\n                  <label>Amount</label>\r\n                  <input type='number'\r\n                   min=\"0.01\"\r\n                    step=\"0.01\"\r\n                    value={userInput.enteredAmount}\r\n                    onChange={amountChangeHandler}/>\r\n              </div>\r\n              <div className=\"new-expense__control\">\r\n                  <label>Date</label>\r\n                  <input\r\n                   type='date'\r\n                   min=\"2020-01-01\" \r\n                   max=\"2023-12-31\" \r\n                   value={userInput.enteredDate}\r\n                   onChange={dateChangeHandler} />\r\n              </div>\r\n              <div className=\"new-expense__actions\">\r\n                  <button type=\"button\" onClick={props.onCancel}>Cancel</button>\r\n                  <button type='submit'>Add Expense</button>\r\n              </div>\r\n          </div>\r\n      </form>\r\n    )\r\n};\r\n\r\nexport default ExpenseForm;","import React, {useState} from 'react';\r\nimport './NewExpense.css';\r\nimport ExpenseForm from './ExpenseForm';\r\n\r\nconst NewExpense = (props) => {\r\n\r\n    const [isEditing, setIsEditing] = useState(false);\r\n\r\n    const saveExpenseDataHandler = (enteredExpenseData) => {\r\n        const expenseData = {\r\n            ...enteredExpenseData,\r\n            id: Math.random().toString()\r\n        }\r\n\r\n        props.onAddExpense(expenseData)\r\n        console.log(expenseData)\r\n        console.log(\"new exp\")\r\n\r\n        setIsEditing(false)\r\n    }\r\n\r\n    const startEditingHandler = () => {\r\n        setIsEditing(true);\r\n    }\r\n\r\n\r\n    const stopEditingHandler = () => {\r\n        setIsEditing(false);\r\n    }\r\n\r\n    return(\r\n        <div className=\"new-expense\">\r\n           {!isEditing && <button onClick={startEditingHandler}>Add New Expense</button>}\r\n          {isEditing && <ExpenseForm \r\n          onSaveExpenseData={saveExpenseDataHandler}\r\n          onCancel={stopEditingHandler}\r\n          />}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default NewExpense;","import React, {useState} from 'react'\nimport Expenses from './components/Expense/Expenses';\nimport './components/Expense/Expenses.css';\nimport NewExpense from './components/NewExpense/NewExpense';\n\nconst initialExpenses = [\n  {\n    id: 'e1',\n    title: 'Walnuts',\n    amount: '450',\n    date: new Date(2020, 12, 18),\n  },\n\n  {\n    id: 'e2',\n    title: 'Almonds',\n    amount: '350',\n    date: new Date(2020, 10, 18),\n  },\n\n  {\n    id: 'e3',\n    title: 'Orange',\n    amount: '150',\n    date: new Date(2021, 10, 18),\n  },\n\n  {\n    id: 'e4',\n    title: 'Dark Chocolate',\n    amount: '170',\n    date: new Date(2021, 9, 18),\n  },\n  {\n    id: 'e5',\n    title: 'Myntra',\n    amount: '550',\n    date: new Date(2021, 8, 1),\n  },\n  {\n    id: 'e6',\n    title: 'Cake',\n    amount: '150',\n    date: new Date(2020, 10, 28),\n  },\n  {\n    id: 'e7',\n    title: 'Petrol',\n    amount: '100',\n    date: new Date(2021, 7, 18),\n  },\n  {\n    id: 'e8',\n    title: 'Orange',\n    amount: '150',\n    date: new Date(2021, 5, 8),\n  },\n  {\n    id: 'e9',\n    title: 'Pineapple',\n    amount: '50',\n    date: new Date(2021,6, 9),\n  },\n  {\n    id: 'e10',\n    title: 'Strawberry',\n    amount: '90',\n    date: new Date(2021,2, 18),\n  },\n\n  {\n    id: 'e11',\n    title: 'Orange',\n    amount: '150',\n    date: new Date(2020,10, 18),\n  },\n\n  {\n    id: 'e12',\n    title: 'Dark Chocolate',\n    amount: '170',\n    date: new Date(2020,9, 18),\n  },\n  {\n    id: 'e13',\n    title: 'Myntra',\n    amount: '550',\n    date: new Date(2020,8, 1),\n  },\n  {\n    id: 'e14',\n    title: 'Cake',\n    amount: '150',\n    date: new Date(2020,10,28),\n  },\n  {\n    id: 'e15',\n    title: 'Petrol',\n    amount: '100',\n    date: new Date(2020,1,18),\n  },\n  {\n    id: 'e16',\n    title: 'Orange',\n    amount: '150',\n    date: new Date(2020,1,8),\n  },\n  {\n    id: 'e17',\n    title: 'Pineapple',\n    amount: '50',\n    date: new Date(2020,6,9),\n  },\n  {\n    id: 'e18',\n    title: 'Strawberry',\n    amount: '90',\n    date: new Date(2020,2,18),\n  },\n  \n  \n];\n\nconst App = () => {\n\n const [expenses, setExpenses] = useState(initialExpenses);\n\n  const addExpenseHandler = expense => {\n    // setExpenses([expense, ...expenses])\n\n\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses];\n    });\n  }\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler}/>\n\n  <div >\n     \n     <Expenses expenses={expenses}/>\n    </div>\n</div>\n\n\n   \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}